//
// Copyright IBM Corp. 2019, 2023
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@use '@carbon/styles/scss/config' as *;
@use '@carbon/styles/scss/theme' as *;
@use '@carbon/styles/scss/motion' as *;
@use '@carbon/styles/scss/spacing' as *;
@use '@carbon/styles/scss/breakpoint' as *;
@use '@carbon/styles/scss/layer' as *;
@use '@carbon/styles/scss/type' as *;
@use '@carbon/styles/scss/utilities/convert' as *;
@use '@carbon/styles/scss/components/modal' as *;
@use '@carbon/styles/scss/components/button' as *;

:host(#{$prefix}-modal) {
  // `@extend .#{$prefix}--modal` seems to cause `&.is-visible` style to be brought into `:host(#{$prefix}-modal)` with ShadyCSS
  position: fixed;
  top: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  z-index: z('modal');
  display: flex;
  align-items: center;
  justify-content: center;
  content: '';
  background-color: $overlay;
  opacity: 0;
  visibility: hidden;
  transition: background-color $duration-slow-02 motion(exit, expressive),
    opacity $duration-moderate-02 motion(exit, expressive),
    z-index $duration-slow-02 motion(exit, expressive),
    visibility $duration-moderate-02 motion(exit, expressive);

  .#{$prefix}--text-input,
  .#{$prefix}--select-input {
    background-color: $field-02;
  }

  &[full-width] {
    ::slotted(#{$prefix}-modal-body) {
      margin: 0;
      padding: 0;
    }
  }
}

:host(#{$prefix}-modal[open]) {
  @extend .#{$prefix}--modal, .is-visible;
}

:host(#{$prefix}-modal-header) {
  @extend .#{$prefix}--modal-header;
}

:host(#{$prefix}-modal-close-button) {
  outline: none;
}

:host(#{$prefix}-modal-heading),
:host(#{$prefix}-modal-label) {
  display: block;
}

:host(#{$prefix}-modal-heading) {
  @extend .#{$prefix}--modal-header__heading;
}

:host(#{$prefix}-modal-label) {
  @extend .#{$prefix}--modal-header__label;
}

:host(#{$prefix}-modal-body) {
  @extend .#{$prefix}--modal-content;
  @extend .#{$prefix}--layer-two;

  ::slotted(cds-form-item) {
    margin-bottom: $spacing-05;
  }

  ::slotted(*:last-child) {
    padding-bottom: $spacing-07;
  }
}

:host(#{$prefix}-modal-body-content) {
  @include type-style('body-01');

  display: block;
  padding-right: calc(20% - #{$spacing-07});

  &[description] {
    margin-bottom: $spacing-05;
  }
}

:host(#{$prefix}-modal-footer) {
  @extend .#{$prefix}--modal-footer;

  &[has-three-buttons] {
    @extend .#{$prefix}--modal-footer--three-button;

    ::slotted(#{$prefix}-modal-footer-button) {
      flex: 0 1 25%;
    }
  }

  .#{$prefix}--modal-footer--three-button {
    ::slotted(#{$prefix}-button),
    ::slotted(#{$prefix}-modal-footer-button) {
      flex: 0 1 25%;
    }
  }
}

:host(#{$prefix}-modal-footer-button) {
  .#{$prefix}--btn {
    width: 100%;
    max-width: none;
  }
}

:host(#{$prefix}-modal-footer) ::slotted(#{$prefix}-button),
:host(#{$prefix}-modal-footer-button) {
  flex: 0 1 50%;
  max-width: none;
  width: 50%;
  height: rem(64px);
  margin: 0;
  padding-bottom: $spacing-07;
}

:host(#{$prefix}-modal-footer-button) .#{$prefix}--btn {
  padding-top: rem(16px);
  padding-bottom: rem(32px);
  box-shadow: rem(-1px) 0 0 0 $button-separator;
}

:host(#{$prefix}-modal-footer-button:first-of-type) .#{$prefix}--btn {
  box-shadow: inherit;
}

:host(#{$prefix}-modal-footer-button) {
  &,
  &:first-of-type {
    .#{$prefix}--btn:focus {
      box-shadow: inset 0 0 0 $button-outline-width $focus,
        inset 0 0 0 $button-border-width $background;
    }
  }
}
