/**
 * @license
 *
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { customElement, html, property, LitElement } from 'lit-element';
import { classMap } from 'lit-html/directives/class-map';
import settings from 'carbon-components/es/globals/js/settings';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings.js';
import styles from './content-section.scss';

const { prefix } = settings;
const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * Content Section theme
 */
export enum CONTENT_SECTION_THEME {
  /**
   * Carbon White theme (default)
   */
  WHITE = 'white',

  /**
   * Carbon Gray 90 theme
   */

  G10 = 'g10',

  /**
   * Carbon Gray 90 theme
   */
  G90 = 'g90',

  /**
   *  Carbon Gray 100 theme
   */
  G100 = 'g100',
}

/**
 * The Content Section component for use with cardSection
 *
 * @element dds-content-section
 */
@customElement(`${ddsPrefix}-content-section`)
class DDSContentSection extends LitElement {
  /**
   * Returns a class-name based on the type parameter type
   */
  protected _getTypeClass() {
    return classMap({
      [`${this.customClassName}`]: this.customClassName,
      [`${prefix}--content-section--${this.theme}`]: true,
      [`${prefix}--content-section`]: true,
    });
  }

  /**
   * Renders Content Section heading slot
   */
  protected _renderHeading() {
    const { heading } = this;
    return html`
      <slot name="heading">${heading}</slot>
    `;
  }

  /**
   * Renders children
   */
  protected __renderChildren() {
    const { children } = this;
    return html`
      <slot name="children">${children}</slot>
    `;
  }

  /**
   * The Content Section heading.
   */
  @property()
  heading = '';

  @property({ reflect: true })
  theme = CONTENT_SECTION_THEME.WHITE;

  @property()
  customClassName = '';
  // data-autoid={otherProps.autoid ? otherProps.autoid : "${prefix}--content-section"}

  render() {
    return html`
      <section 
      class="${prefix}--content-section">
        <div class="${prefix}--content-section__grid">
          <div class="${prefix}--content-section__row">
            <div class="${prefix}--content-section__left">
              <h2 class="${prefix}--content-section__heading">${this._renderHeading()}<h2>
            </div>
            <div class="${prefix}--content-section__children">
              ${this.__renderChildren()}
            </div>
          </div>
        </div>
      </section>
    `;

    /**
     * 
     *   
     * 
    <section
    className={classNames(`${prefix}--content-section`, customClassName, {
      [`${prefix}--content-section--${theme}`]: theme,
    })}
    data-autoid={
      otherProps.autoid ? otherProps.autoid : `${stablePrefix}--content-section`
    }>
    <div className={`${prefix}--content-section__grid`}>
      <div className={`${prefix}--content-section__row`}>
        <div className={`${prefix}--content-section__left`}>
          <h2 className={`${prefix}--content-section__heading`}>{heading}</h2>
        </div>
        <div className={`${prefix}--content-section__children`}>{children}</div>
      </div>
    </div>
  </section>
     */
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSContentSection;
