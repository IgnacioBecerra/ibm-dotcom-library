/**
 * @license
 *
 * Copyright IBM Corp. 2020, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

 import { customElement, html, LitElement, property } from 'lit-element';
 import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings.js';
 // import HostListener from 'carbon-web-components/es/globals/decorators/host-listener.js';
 import settings from 'carbon-components/es/globals/js/settings';
 import Filter from 'carbon-web-components/es/icons/filter/16';
 import HostListener from 'carbon-web-components/es/globals/decorators/host-listener';
 import HostListenerMixin from 'carbon-web-components/es/globals/mixins/host-listener';
 import StableSelectorMixin from '../../globals/mixins/stable-selector';
 import './filter-group';
 
 import { baseFontSize, breakpoints } from '@carbon/layout';
 
 
 import BXModal from 'carbon-web-components/es/components/modal/modal';
 
 import styles from './filter-panel.scss';
 
 // import 'carbon-web-components/es/components/tag/filter-tag';
 import 'carbon-web-components/es/components/checkbox/checkbox';
 import 'carbon-web-components/es/components/modal/modal';
 
 const { prefix } = settings;
 const { stablePrefix: ddsPrefix } = ddsSettings;
 
 const gridBreakpoint = parseFloat(breakpoints.md.width) * baseFontSize;
 
 
 @customElement(`${ddsPrefix}-filter-panel-composite`)
 class DDSFilterPanelComposite extends HostListenerMixin(StableSelectorMixin(BXModal)) {

  /**
   * `true` to open the locale modal.
   */
	 @property({ type: Boolean })
	 openFilterModal = false;

	protected _openModal(event) {
		this.openFilterModal = true;
		console.log(gridBreakpoint)
		console.log(document.body.clientWidth)
	}

	protected _renderButton = gridBreakpoint < document.body.clientHeight;
	
	 render() {
		 console.log(this._renderButton)
		 return html`

		 <button class='bx--filter-button' @click=${this._openModal}>Filter ${Filter()}</button>
		 <dds-filter-panel-modal title="Filter" ?open=${this.openFilterModal}>
				<p>Test</p>
			</dds-filter-panel-modal>

			<dds-filter-panel title="Filter">
			<p>Test</p>
		</dds-filter-panel>
		 `;
	 }
 
	 static get eventContentStateChange() {
		 return `${ddsPrefix}-input-select`;
	 }
 
	 static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
 }
 
 export default DDSFilterPanelComposite;
 